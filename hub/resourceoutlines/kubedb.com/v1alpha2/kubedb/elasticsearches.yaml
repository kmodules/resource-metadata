apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceOutline
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: Elasticsearch
    k8s.io/resource: elasticsearches
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-elasticsearches-kubedb
spec:
  defaultLayout: false
  header:
    actions:
      create: Never
    displayMode: Field
    kind: Connection
    query:
      byLabel: view
      type: GraphQL
    ref:
      group: core.k8s.appscode.com
      kind: GenericResource
    view:
      name: core.k8s.appscode.com-v1alpha1-genericresources-kubedb
  pages:
  - name: Overview
    sections:
    - blocks:
      - actions:
          create: Never
        displayMode: List
        fieldPath: '{.response.dashboards[0].panels}'
        impersonate: true
        kind: Connection
        name: Dashboards
        query:
          raw: |
            request:
              embeddedLink: true
              dashboards:
              - title: "KubeDB / Elasticsearch / Summary"
                vars:
                - name: namespace
                  value: {{ .namespace }}
                - name: app
                  value: {{ .name }}
                panels:
                  - { "title": "CPU Usage", "width": 12 }
                  - { "title": "Memory Usage", "width": 12 }
                  - { "title": "Disk Usage", "width": 6 }
                  - { "title": "Disk R/W Info", "width": 6 }
                  - { "title": "IOPS (Reads+Writes)", "width": 6 }
                  - { "title": "ThroughPut (Read+Write)", "width": 6 }
                  - { "title": "Receive Bandwidth", "width": 6 }
                  - { "title": "Transmit Bandwidth", "width": 6 }
          type: REST
        ref:
          group: ui.openviz.dev
          kind: DashboardGroup
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
          opscenter-monitoring:
          - monitoring-operator
        view:
          name: ui.openviz.dev-v1alpha1-dashboardgroups-panels
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Nodes
        query:
          raw: |-
            query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
              find(oid: $src) {
                offshoot(group: "", kind: "Pod") {
                  refs: view(group: $targetGroup, kind: $targetKind) {
                    namespace
                    name
                  }
                }
              }
            }
          type: GraphQL
        ref:
          group: core.k8s.appscode.com
          kind: PodView
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
        view:
          name: core.k8s.appscode.com-v1alpha1-podviews-kubedb-elasticsearches
      info:
        actions:
          create: Never
        displayMode: List
        kind: Connection
        query:
          byLabel: connect_via
          type: GraphQL
        ref:
          group: appcatalog.appscode.com
          kind: AppBinding
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
      insight:
        actions:
          create: Never
        displayMode: Field
        kind: Connection
        name: Insight
        query:
          byLabel: view
          type: GraphQL
        ref:
          group: ui.kubedb.com
          kind: ElasticsearchInsight
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
  - name: Insights
    requiredFeatureSets:
      opscenter-datastore:
      - kubedb
      - kubedb-opscenter
      opscenter-monitoring:
      - monitoring-operator
    sections:
    - blocks:
      - actions:
          create: Never
        displayMode: List
        fieldPath: .response.dashboards
        impersonate: true
        kind: Connection
        name: Grafana Dashboards
        query:
          raw: |
            request:
              sourceLocator:
                resource:
                  group: kubedb.com
                  name: elasticsearches
                  version: v1alpha2
                ref:
                  name: {{ .name }}
                  namespace: {{ .namespace }}
              name: kubedb.com-v1alpha2-elasticsearches
          type: REST
        ref:
          group: meta.k8s.appscode.com
          kind: RenderDashboard
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
          opscenter-monitoring:
          - monitoring-operator
        view:
          name: ui.k8s.appscode.com-v1alpha1-resourcedashboards-urls
      - actions:
          create: Never
        displayMode: List
        fieldPath: .spec.nodes
        kind: Connection
        name: Stats
        query:
          byLabel: view
          type: GraphQL
        ref:
          group: ui.kubedb.com
          kind: ElasticsearchNodesStats
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
        view:
          name: ui.kubedb.com-v1alpha1-elasticsearchnodesstats-nodes
      - actions:
          create: Never
        displayMode: List
        fieldPath: .spec.indices
        kind: Connection
        name: Indices
        query:
          byLabel: view
          type: GraphQL
        ref:
          group: ui.kubedb.com
          kind: ElasticsearchSchemaOverview
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
        view:
          name: ui.kubedb.com-v1alpha1-elasticsearchschemaoverviews-indices
      insight:
        actions:
          create: Never
        displayMode: Field
        kind: Connection
        query:
          byLabel: view
          type: GraphQL
        ref:
          group: ui.kubedb.com
          kind: ElasticsearchInsight
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          - kubedb-opscenter
  - name: Users
    sections:
    - blocks:
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Root User
        query:
          byLabel: auth_secret
          type: GraphQL
        ref:
          group: ""
          kind: Secret
        view:
          name: core-v1-secrets
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: AppBindings
        query:
          byLabel: connect_via
          type: GraphQL
        ref:
          group: appcatalog.appscode.com
          kind: AppBinding
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
        view:
          name: appcatalog.appscode.com-v1alpha1-appbindings
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: VaultServers
        query:
          raw: |-
            query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
              find(oid: $src) {
                authz(group: "engine.kubevault.com", kind: "SecretEngine") {
                  refs: offshoot(group: $targetGroup, kind: $targetKind) {
                    namespace
                    name
                  }
                }
             }
            }
          type: GraphQL
        ref:
          group: kubevault.com
          kind: VaultServer
        requiredFeatureSets:
          opscenter-secret-management:
          - kubevault
        view:
          name: kubevault.com-v1alpha2-vaultservers
      - actions:
          create: Always
        displayMode: List
        kind: Connection
        name: SecretEngines
        query:
          byLabel: authz
          type: GraphQL
        ref:
          group: engine.kubevault.com
          kind: SecretEngine
        requiredFeatureSets:
          opscenter-secret-management:
          - kubevault
        view:
          name: engine.kubevault.com-v1alpha1-secretengines
      - actions:
          create: Always
        displayMode: List
        kind: Connection
        name: ElasticSearchRoles
        query:
          byLabel: authz
          type: GraphQL
        ref:
          group: engine.kubevault.com
          kind: ElasticSearchRole
        requiredFeatureSets:
          opscenter-secret-management:
          - kubevault
        view:
          name: engine.kubevault.com-v1alpha1-elasticsearchroles
      - actions:
          create: Always
        displayMode: List
        kind: Connection
        name: SecretAccessRequests
        query:
          byLabel: authz
          type: GraphQL
        ref:
          group: engine.kubevault.com
          kind: SecretAccessRequest
        requiredFeatureSets:
          opscenter-secret-management:
          - kubevault
        view:
          name: engine.kubevault.com-v1alpha1-secretaccessrequests
  - name: Operations
    sections:
    - blocks:
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Recent Operations
        query:
          byLabel: ops
          type: GraphQL
        ref:
          group: ops.kubedb.com
          kind: ElasticsearchOpsRequest
        view:
          name: ops.kubedb.com-v1alpha1-elasticsearchopsrequests-kubedb
          sort:
            fieldName: Age
            order: Ascending
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Recommendations
        query:
          byLabel: recommended_for
          type: GraphQL
        ref:
          group: supervisor.appscode.com
          kind: Recommendation
        requiredFeatureSets:
          opscenter-datastore:
          - kubedb
          opscenter-tools:
          - supervisor
        view:
          name: supervisor.appscode.com-v1alpha1-recommendations-kubedb
          sort:
            fieldName: Age
            order: Ascending
  - name: Backup
    requiredFeatureSets:
      opscenter-backup:
      - kubestash
    sections:
    - blocks:
      - kind: Block
        name: core.kubestash.com-v1alpha1-kubedb-backup
  - name: Backup (Legacy)
    requiredFeatureSets:
      opscenter-backup:
      - stash
      - stash-opscenter
    sections:
    - blocks:
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Recent Backups
        query:
          raw: |-
            query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
              find(oid: $src) {
                backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
                  refs: offshoot(group: $targetGroup, kind: $targetKind) {
                    namespace
                    name
                  }
                }
              }
            }
          type: GraphQL
        ref:
          group: stash.appscode.com
          kind: BackupSession
        requiredFeatureSets:
          opscenter-backup:
          - stash
        view:
          name: stash.appscode.com-v1beta1-backupsessions-kubedb
      - actions:
          create: Never
        displayMode: List
        kind: Connection
        name: Recent Restores
        query:
          byLabel: restore_into
          type: GraphQL
        ref:
          group: stash.appscode.com
          kind: RestoreSession
        requiredFeatureSets:
          opscenter-backup:
          - stash
        view:
          name: stash.appscode.com-v1beta1-restoresessions-kubedb
      info:
        actions:
          create: Never
        displayMode: Field
        kind: Connection
        query:
          raw: |-
            query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
              find(oid: $src) {
                backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
                  refs: view(group: $targetGroup, kind: $targetKind) {
                    namespace
                    name
                  }
                }
              }
            }
          type: GraphQL
        ref:
          group: ui.stash.appscode.com
          kind: BackupOverview
        requiredFeatureSets:
          opscenter-backup:
          - stash
          - stash-opscenter
  - name: Security
    sections:
    - blocks:
      - kind: Custom
        name: CVE Report
      name: CVE Report
      requiredFeatureSets:
        opscenter-security:
        - scanner
    - blocks:
      - kind: Block
        name: rbac.authorization.k8s.io-v1-accesscontrols
      name: Access Control
    - blocks:
      - kind: Block
        name: cert-manager.io-v1-tls
      name: TLS
      requiredFeatureSets:
        opscenter-security:
        - cert-manager
    - blocks:
      - kind: Block
        name: policy-v1-policies
      name: Policies
      requiredFeatureSets:
        opscenter-policy-management:
        - gatekeeper
        - gatekeeper-templates
        - gatekeeper-constraints
        - gatekeeper-grafana-dashboards
    - blocks:
      - kind: Block
        name: falco.appscode.com-v1alpha1-falcoevents-app
      name: Runtime Security
      requiredFeatureSets:
        opscenter-security:
        - falco
        - falco-ui-server
  - name: Manifests
    sections:
    - info:
        kind: Custom
        query:
          type: ""
        ref:
          group: meta.k8s.appscode.com
          kind: ResourceManifests
  resource:
    group: kubedb.com
    kind: Elasticsearch
    name: elasticsearches
    scope: Namespaced
    version: v1alpha2
  tabBar:
    actions:
      create: Never
    displayMode: Field
    kind: Connection
    query:
      byLabel: view
      type: GraphQL
    ref:
      group: core.k8s.appscode.com
      kind: GenericResourceService
    view:
      name: core.k8s.appscode.com-v1alpha1-genericresourceservices-kubedb
